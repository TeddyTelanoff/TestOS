#include "Screen.h"

struct Box
{
	enum
	{
		Width = 9,
		Height = 9,
		Scale = 4,
	};

	static constexpr byte Texture[Width][Height] = {
		{ 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, },
		{ 0x72, 0x72, 0x06, 0x06, 0x06, 0x06, 0x06, 0x72, 0x72, },
		{ 0x72, 0x06, 0x72, 0x06, 0x06, 0x06, 0x72, 0x06, 0x72, },
		{ 0x72, 0x06, 0x06, 0x72, 0x06, 0x72, 0x06, 0x06, 0x72, },
		{ 0x72, 0x06, 0x06, 0x06, 0x72, 0x06, 0x06, 0x06, 0x72, },
		{ 0x72, 0x06, 0x06, 0x72, 0x06, 0x72, 0x06, 0x06, 0x72, },
		{ 0x72, 0x06, 0x72, 0x06, 0x06, 0x06, 0x72, 0x06, 0x72, },
		{ 0x72, 0x72, 0x06, 0x06, 0x06, 0x06, 0x06, 0x72, 0x72, },
		{ 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, },
	};

	int x, y;

	void Draw() const
	{
		for (int py = 0; py < Height * Scale; py++)
				for (int px = 0; px < Width * Scale; px++)
					SetPixel(x * Scale + px, y * Scale + py, Box::Texture[px / Scale][py / Scale]);
	}

	void Update()
	{
		y--;
	}
};

extern "C" void Main()
{
	Box b = { 1, 1, };
	b.Draw();
	SwapBuffers();

	while (true);
}